# coding: utf-8

"""
    HTTP API Console

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CodeInfoResponseContainsCodeMetaDataFromCodeInfo(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'code_id': 'str',
        'creator': 'str',
        'data_hash': 'str',
        'instantiate_permission': 'CosmwasmWasmV1CodeInfoResponseInstantiatePermission'
    }

    attribute_map = {
        'code_id': 'code_id',
        'creator': 'creator',
        'data_hash': 'data_hash',
        'instantiate_permission': 'instantiate_permission'
    }

    def __init__(self, code_id=None, creator=None, data_hash=None, instantiate_permission=None):  # noqa: E501
        """CodeInfoResponseContainsCodeMetaDataFromCodeInfo - a model defined in Swagger"""  # noqa: E501
        self._code_id = None
        self._creator = None
        self._data_hash = None
        self._instantiate_permission = None
        self.discriminator = None
        if code_id is not None:
            self.code_id = code_id
        if creator is not None:
            self.creator = creator
        if data_hash is not None:
            self.data_hash = data_hash
        if instantiate_permission is not None:
            self.instantiate_permission = instantiate_permission

    @property
    def code_id(self):
        """Gets the code_id of this CodeInfoResponseContainsCodeMetaDataFromCodeInfo.  # noqa: E501


        :return: The code_id of this CodeInfoResponseContainsCodeMetaDataFromCodeInfo.  # noqa: E501
        :rtype: str
        """
        return self._code_id

    @code_id.setter
    def code_id(self, code_id):
        """Sets the code_id of this CodeInfoResponseContainsCodeMetaDataFromCodeInfo.


        :param code_id: The code_id of this CodeInfoResponseContainsCodeMetaDataFromCodeInfo.  # noqa: E501
        :type: str
        """

        self._code_id = code_id

    @property
    def creator(self):
        """Gets the creator of this CodeInfoResponseContainsCodeMetaDataFromCodeInfo.  # noqa: E501


        :return: The creator of this CodeInfoResponseContainsCodeMetaDataFromCodeInfo.  # noqa: E501
        :rtype: str
        """
        return self._creator

    @creator.setter
    def creator(self, creator):
        """Sets the creator of this CodeInfoResponseContainsCodeMetaDataFromCodeInfo.


        :param creator: The creator of this CodeInfoResponseContainsCodeMetaDataFromCodeInfo.  # noqa: E501
        :type: str
        """

        self._creator = creator

    @property
    def data_hash(self):
        """Gets the data_hash of this CodeInfoResponseContainsCodeMetaDataFromCodeInfo.  # noqa: E501


        :return: The data_hash of this CodeInfoResponseContainsCodeMetaDataFromCodeInfo.  # noqa: E501
        :rtype: str
        """
        return self._data_hash

    @data_hash.setter
    def data_hash(self, data_hash):
        """Sets the data_hash of this CodeInfoResponseContainsCodeMetaDataFromCodeInfo.


        :param data_hash: The data_hash of this CodeInfoResponseContainsCodeMetaDataFromCodeInfo.  # noqa: E501
        :type: str
        """

        self._data_hash = data_hash

    @property
    def instantiate_permission(self):
        """Gets the instantiate_permission of this CodeInfoResponseContainsCodeMetaDataFromCodeInfo.  # noqa: E501


        :return: The instantiate_permission of this CodeInfoResponseContainsCodeMetaDataFromCodeInfo.  # noqa: E501
        :rtype: CosmwasmWasmV1CodeInfoResponseInstantiatePermission
        """
        return self._instantiate_permission

    @instantiate_permission.setter
    def instantiate_permission(self, instantiate_permission):
        """Sets the instantiate_permission of this CodeInfoResponseContainsCodeMetaDataFromCodeInfo.


        :param instantiate_permission: The instantiate_permission of this CodeInfoResponseContainsCodeMetaDataFromCodeInfo.  # noqa: E501
        :type: CosmwasmWasmV1CodeInfoResponseInstantiatePermission
        """

        self._instantiate_permission = instantiate_permission

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CodeInfoResponseContainsCodeMetaDataFromCodeInfo, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CodeInfoResponseContainsCodeMetaDataFromCodeInfo):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
