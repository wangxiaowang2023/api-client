# coding: utf-8

"""
    HTTP API Console

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CosmosGroupV1GroupMemberMember(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'address': 'str',
        'weight': 'str',
        'metadata': 'str',
        'added_at': 'datetime'
    }

    attribute_map = {
        'address': 'address',
        'weight': 'weight',
        'metadata': 'metadata',
        'added_at': 'added_at'
    }

    def __init__(self, address=None, weight=None, metadata=None, added_at=None):  # noqa: E501
        """CosmosGroupV1GroupMemberMember - a model defined in Swagger"""  # noqa: E501
        self._address = None
        self._weight = None
        self._metadata = None
        self._added_at = None
        self.discriminator = None
        if address is not None:
            self.address = address
        if weight is not None:
            self.weight = weight
        if metadata is not None:
            self.metadata = metadata
        if added_at is not None:
            self.added_at = added_at

    @property
    def address(self):
        """Gets the address of this CosmosGroupV1GroupMemberMember.  # noqa: E501

        address is the member's account address.  # noqa: E501

        :return: The address of this CosmosGroupV1GroupMemberMember.  # noqa: E501
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this CosmosGroupV1GroupMemberMember.

        address is the member's account address.  # noqa: E501

        :param address: The address of this CosmosGroupV1GroupMemberMember.  # noqa: E501
        :type: str
        """

        self._address = address

    @property
    def weight(self):
        """Gets the weight of this CosmosGroupV1GroupMemberMember.  # noqa: E501

        weight is the member's voting weight that should be greater than 0.  # noqa: E501

        :return: The weight of this CosmosGroupV1GroupMemberMember.  # noqa: E501
        :rtype: str
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this CosmosGroupV1GroupMemberMember.

        weight is the member's voting weight that should be greater than 0.  # noqa: E501

        :param weight: The weight of this CosmosGroupV1GroupMemberMember.  # noqa: E501
        :type: str
        """

        self._weight = weight

    @property
    def metadata(self):
        """Gets the metadata of this CosmosGroupV1GroupMemberMember.  # noqa: E501

        metadata is any arbitrary metadata attached to the member.  # noqa: E501

        :return: The metadata of this CosmosGroupV1GroupMemberMember.  # noqa: E501
        :rtype: str
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this CosmosGroupV1GroupMemberMember.

        metadata is any arbitrary metadata attached to the member.  # noqa: E501

        :param metadata: The metadata of this CosmosGroupV1GroupMemberMember.  # noqa: E501
        :type: str
        """

        self._metadata = metadata

    @property
    def added_at(self):
        """Gets the added_at of this CosmosGroupV1GroupMemberMember.  # noqa: E501

        added_at is a timestamp specifying when a member was added.  # noqa: E501

        :return: The added_at of this CosmosGroupV1GroupMemberMember.  # noqa: E501
        :rtype: datetime
        """
        return self._added_at

    @added_at.setter
    def added_at(self, added_at):
        """Sets the added_at of this CosmosGroupV1GroupMemberMember.

        added_at is a timestamp specifying when a member was added.  # noqa: E501

        :param added_at: The added_at of this CosmosGroupV1GroupMemberMember.  # noqa: E501
        :type: datetime
        """

        self._added_at = added_at

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CosmosGroupV1GroupMemberMember, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CosmosGroupV1GroupMemberMember):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
